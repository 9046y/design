// *******. s1 ********************************
public static void ShowUI(Account account) {
		Dialog dlg=null;	
		if(account instanceof SA) {
			dlg = new SADialog();
		}
		if(account instanceof CA) {
			dlg = new CADialog();
		}
		if(dlg!=null) {
			dlg.Display();			
		}
} (reflection,cyclomatic complexity)
// *******. s2 ********************************
interface Account{
  ...
  Dialog getDialog();
}
public static void ShowUI(Account account) {
		Dialog dlg= account.getDialog();			
		dlg.Display();
} (SRP, Coupling)
// *******. s3 ********************************
class Factory{
  Dialog getDialog(CA ca){
    return new CADialog();
  }
  Dialog getDialog(CB cb){
    return new CBDialog();
  }
}
public static void ShowUI(Account account) {
    	Factory f = new Factory();
	Dialog dlg= f.getDialog(account);			
	dlg.Display();
} 
// *******. s4 ********************************
interface Plugin{
	void do(SA sa);
	void do(CA ca);
}
interface Account{
	void withdraw();
	void deposit();
	void invoke(Plugin plugin);
}
class SA implements Account{
	void withdraw(){}
	void deposit(){}
	void invoke(Plugin plugin){
		plugin.do(this);
	}
}
class CA implements Account{
	void withdraw(){}
	void deposit(){}
	void invoke(Plugin plugin){
		plugin.do(this);
	}
}
-----------------------------------------
class Factory implements Plugin{
  Dialog res;
  void do(CA ca){
    res= new CADialog();
  }
  void do(SA sa){
    res= new SADialog();
  }
}
public static void ShowUI(Account account) {
    	Factory f = new Factory();
	//f.do(account); <-- will not work "base pointer"
	account.invoke(f);
	f.res.Display();
} 

